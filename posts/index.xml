<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Eureka Demo</title><link>https://blog.ans20xx.com/posts/</link><description>Recent content in Posts on Eureka Demo</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2022 &lt;a href="https://www.ans20xx.com/">安橙&lt;/a></copyright><lastBuildDate>Tue, 01 Nov 2022 00:05:06 +0800</lastBuildDate><atom:link href="https://blog.ans20xx.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>第四章 注释</title><link>https://blog.ans20xx.com/posts/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%E7%AC%94%E8%AE%B03/</link><pubDate>Tue, 01 Nov 2022 00:05:06 +0800</pubDate><guid>https://blog.ans20xx.com/posts/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%E7%AC%94%E8%AE%B03/</guid><description>前言 只有代码能告诉你它做的事，它是唯一准确的。尽管有时候我们也需要注释，但是还是要尽量减少它们。
MockRequest request; private final String HTTP_DATE_REGEXP = &amp;quot;[SMTWF][a-z]{2}\\,\\s[0-9]{2}\\s[JSFMASOND][a-z]{2}\\s&amp;quot; + &amp;quot;[0-9]{4}\\s[0-9]{2}\\:[0-9]{2}\\:[0-9]{2}\\sGMT&amp;quot;; private Response response; private FitNessContext context; private FileResponder responder; private Locale saveLocale; // Example: &amp;quot;Tue, 02 Apr 2003 22:18:49 GMT&amp;quot; 上面这段代码说明了什么问题呢？仔细看最后一行注释，它本应该是放在 HTTP_DATE_REGEXP 附近的，可能是后续开发者在变更代码时没有注意到这行注释，从而在二者之间插入了其他代码，这就让注释具有了误导性。
4.1 注释不能美化糟糕的代码 看到糟糕代码的时候，首先应想到如何把代码弄干净，而不是通过注释来美化它。
带有少量注释的整洁而有表现力的代码，要比带有大量注释的零碎而复杂的代码好的多。
4.2 用代码来阐述 // Check to see if the employee is eligible for full benefits if ((employee.flags &amp;amp; HOURLY_FLAG) &amp;amp;&amp;amp; (employee.age &amp;gt; 65)) 上面的代码显然不如下面的代码简单明了：
if (employee.isEligibleForFullBenefits()) 很多时候，只需要创建一个描述了与注释所言同一事物的函数即可。
4.3 好注释 有些注释是必须的。但是，最好还是尽量不写注释。
4.3.1 法律信息 示例如下：
// Copyright (C) 2003,2004,2005 by Object Mentor, Inc.</description></item><item><title>Diagram Support</title><link>https://blog.ans20xx.com/posts/diagram-support/</link><pubDate>Wed, 31 Mar 2021 13:11:22 +0800</pubDate><guid>https://blog.ans20xx.com/posts/diagram-support/</guid><description>&lt;p>Eureka supports the rendering of diagrams by using Mermaid.&lt;/p></description></item><item><title>Math Support</title><link>https://blog.ans20xx.com/posts/math-support/</link><pubDate>Fri, 20 Nov 2020 22:52:56 +0800</pubDate><guid>https://blog.ans20xx.com/posts/math-support/</guid><description>&lt;p>Eureka supports the rendering of mathematical formulas by using KaTeX.&lt;/p></description></item><item><title>Featured Image</title><link>https://blog.ans20xx.com/posts/featured-image/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://blog.ans20xx.com/posts/featured-image/</guid><description>&lt;p>Maecenas maximus, elit in ornare porttitor, nisi eros hendrerit nisl, sed fermentum nulla urna blandit tellus.&lt;/p></description></item><item><title>Markdown Syntax Guide</title><link>https://blog.ans20xx.com/posts/markdown-syntax/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.ans20xx.com/posts/markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Placeholder Text</title><link>https://blog.ans20xx.com/posts/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.ans20xx.com/posts/placeholder-text/</guid><description>&lt;p>Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p></description></item><item><title>Emoji Support</title><link>https://blog.ans20xx.com/posts/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.ans20xx.com/posts/emoji-support/</guid><description>&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p></description></item></channel></rss>